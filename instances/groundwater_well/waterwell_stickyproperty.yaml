# this is a fragment of a waterwell 
# we just isolated the part of interest from 
# https://gin.geosciences.ca/GinService/rs/FeatureTypes/AbstractFeature/gin.59710
# EB : not sure I got the yaml syntax ok
# SG : me neither ...
# SG2 : tried to validate under http://www.yamllint.com/ and https://yaml-online-parser.appspot.com/. Still unsure about the type declaration (type: xxx) though. Does not appear in the spec. seems "foo: !type" is the pattern
# ------------------------
- gin.59710: !GW_Well
    # identify the "shape" of the borehole. Here, we use a geometry.
    trajectory: !TrajectoryPosition
        accuracyStatement: good
        precisitionStatement: good
        linearElement:
            curve: 
                &gin_59710_geom_479603
                geometry: LINESTRING (49.175987 -113.490942 1316.341,49.175987 -113.490942 1182.8385999999998), SRID=EPSG:4979
        # EB this is where I get lost.  I assume this identifies the origin (here, a point that is 0.0 on the trajectory)
        distanceExpression: !TrajectoryDistance
                &trajectoryReferentId
                distanceAlong: 0.0
                referent: 
                    &gin_59710_geom_496582
                    position : POINT(49.175987 -113.490942),SRID=4326 
                    # we could put the 	URI to the collar (https://gin.geosciences.ca/....) and not redefine the Geom
        BRM: !BoreholeReferencingMethod
            name: Linear referencing
            units: http://qudt.org/vocab/unit/M
    gwGeologyLog: !BoreholeEventCollection
        &gin_2501324
        boreholeEventCollectionMember1: !BoreholeEvent
            &BoreholeEvent1
            locatedFeature: 
             # the model as it is implies that only feature can be located.  I have 1 value and 1 reference to a vocabulary
                    # We could it's a "complex observation" - which is technically true, but a headache to encode in full.
                    # We could improve the "locatedFeature" by having a spot to declare DataRecord (like GWML compact encoding)
                    # this means we should relax the "locatedFeature" requirement
                    # Also, repeatin TrajectoryReference implies that it can change from one record to the other - is this what we want.
                    # We don't need to stick to 19148 "Ã  la lettre".
            location: !AtLocation
                atLocation: !TrajectoryDistance
                    distanceAlong: 11.8872
                    TrajectoryReferent: *trajectoryReferentId
        boreholeEventCollectionMember2: !BoreholeEvent
            &BoreholeEvent2
            locatedFeature: # URI to the located feature
            location: !FromToLocation
                fromPosition:
                # 'sticky property' pattern -> don't refine the TrajectoryReferent as defined earlier
                toPosition:
        